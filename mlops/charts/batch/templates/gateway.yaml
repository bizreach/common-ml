{{ if or (eq .Values.mode "webhook") (eq .Values.mode "calendar") }}
apiVersion: argoproj.io/v1alpha1
kind: Gateway
metadata:
  name: "{{ .Release.Name }}-{{ .Values.mode }}-gateway"
  namespace: argo-events
  labels:
    gateways.argoproj.io/gateway-controller-instanceid: argo-events
    gateway-name: "{{ .Release.Name }}-{{ .Values.mode }}-gateway"
spec:
  deploySpec:
    metadata:
      name: "{{ .Release.Name }}-{{ .Values.mode }}-gateway"
      labels:
        gateway-name: "{{ .Release.Name }}-{{ .Values.mode }}-gateway"
    spec:
      containers:
      - name: "gateway-client"
        image: "argoproj/gateway-client:v0.7"
        imagePullPolicy: "Always"
        command: ["/bin/gateway-client"]
      - name: "{{ .Values.mode }}-events"
        image: "argoproj/{{ .Values.mode }}-gateway:v0.7"
        imagePullPolicy: "Always"
        command: ["/bin/{{ .Values.mode }}-gateway"]
      serviceAccountName: "argo-events-sa"
      tolerations:
      - key: "node-role.kubernetes.io/master"
        effect: "NoSchedule"
  configMap: "{{ .Release.Name }}-{{ .Values.mode }}-gateway-configmap"
  type: "{{ .Values.mode }}"
  eventVersion: "1.0"
{{ if (eq .Values.mode "webhook") }}
  serviceSpec:
    metadata:
      name: "{{ .Release.Name }}-webhook-gateway-svc"
    spec:
      selector:
        gateway-name: "{{ .Release.Name }}-webhook-gateway"
      ports:
        - port: {{ .Values.webhook.port }}
          targetPort: {{ .Values.webhook.port }}
      type: NodePort
{{ end }}
  watchers:
    sensors:
    - name: "{{ .Release.Name }}-{{ .Values.mode }}-sensor"
  processorPort: "9330"
  eventProtocol:
    type: "HTTP"
    http:
      port: "9300"
{{ end }}
